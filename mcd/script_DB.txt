#------------------------------------------------------------
#        Script MySQL.
#------------------------------------------------------------


CREATE TABLE user_profil(
        id_user      int (11) Auto_increment  NOT NULL ,
        login_user   Varchar (50) ,
        mdp_user     Varchar (50) ,
        nom_user     Varchar (50) ,
        pren_user    Varchar (50) ,
        dateN_user   Date ,
        num_rue      Varchar (10) ,
        nom_rue      Varchar (100) ,
        cp_user      Numeric ,
        ville_user   Varchar (50) ,
        tel_user     Varchar (15) ,
        email_user   Varchar (100) ,
        dispo        Bool ,
        photo_user   Varchar (255) ,
        descriptif   Text ,
        id_role_role Int ,
        PRIMARY KEY (id_user )
)ENGINE=InnoDB;


CREATE TABLE promotion(
        id_promo     int (11) Auto_increment  NOT NULL ,
        lib_promo    Varchar (50) ,
        id_site_site Int ,
        PRIMARY KEY (id_promo )
)ENGINE=InnoDB;


CREATE TABLE projet(
        id_projet           int (11) Auto_increment  NOT NULL ,
        nom_projet          Varchar (50) ,
        desc_projet         Text ,
        avancement_projet   Varchar (50) ,
        date_debut          Date ,
        date_fin            Date ,
        id_user_user_profil Int NOT NULL ,
        id_etat_etat        Int NOT NULL ,
        PRIMARY KEY (id_projet )
)ENGINE=InnoDB;


CREATE TABLE competence(
        id_comp  int (11) Auto_increment  NOT NULL ,
        lib_comp Varchar ,
        id_comp1 Int ,
        PRIMARY KEY (id_comp )
)ENGINE=InnoDB;


CREATE TABLE site(
        id_site  int (11) Auto_increment  NOT NULL ,
        nom_site Varchar (100) NOT NULL ,
        PRIMARY KEY (id_site )
)ENGINE=InnoDB;


CREATE TABLE role(
        id_role     int (11) Auto_increment  NOT NULL ,
        design_role Varchar (100) ,
        PRIMARY KEY (id_role )
)ENGINE=InnoDB;


CREATE TABLE privilege(
        id_privilege  int (11) Auto_increment  NOT NULL ,
        lib_privilege Varchar (50) NOT NULL ,
        PRIMARY KEY (id_privilege )
)ENGINE=InnoDB;


CREATE TABLE etat(
        id_etat int (11) Auto_increment  NOT NULL ,
        etat    Varchar (100) NOT NULL ,
        PRIMARY KEY (id_etat )
)ENGINE=InnoDB;


CREATE TABLE notification(
        id_notification int (11) Auto_increment  NOT NULL ,
        contenu         Text ,
        PRIMARY KEY (id_notification )
)ENGINE=InnoDB;


CREATE TABLE participe(
        id_projet_projet    Int NOT NULL ,
        id_user_user_profil Int NOT NULL ,
        PRIMARY KEY (id_projet_projet ,id_user_user_profil )
)ENGINE=InnoDB;


CREATE TABLE possede(
        niveau_comp         Varchar (25) ,
        id_comp_competence  Int NOT NULL ,
        id_user_user_profil Int NOT NULL ,
        PRIMARY KEY (id_comp_competence ,id_user_user_profil )
)ENGINE=InnoDB;


CREATE TABLE necessite(
        id_projet_projet   Int NOT NULL ,
        id_comp_competence Int NOT NULL ,
        PRIMARY KEY (id_projet_projet ,id_comp_competence )
)ENGINE=InnoDB;


CREATE TABLE fait_partie(
        id_user_user_profil Int NOT NULL ,
        id_promo_promotion  Int NOT NULL ,
        PRIMARY KEY (id_user_user_profil ,id_promo_promotion )
)ENGINE=InnoDB;


CREATE TABLE beneficie(
        id_role_role           Int NOT NULL ,
        id_privilege_privilege Int NOT NULL ,
        PRIMARY KEY (id_role_role ,id_privilege_privilege )
)ENGINE=InnoDB;


CREATE TABLE est_invite(
        id_user_user_profil Int NOT NULL ,
        id_projet_projet    Int NOT NULL ,
        PRIMARY KEY (id_user_user_profil ,id_projet_projet )
)ENGINE=InnoDB;


CREATE TABLE recoit(
        id_user_user_profil          Int NOT NULL ,
        id_notification_notification Int NOT NULL ,
        PRIMARY KEY (id_user_user_profil ,id_notification_notification )
)ENGINE=InnoDB;

ALTER TABLE user_profil ADD CONSTRAINT FK_user_profil_id_role_role FOREIGN KEY (id_role_role) REFERENCES role(id_role);
ALTER TABLE promotion ADD CONSTRAINT FK_promotion_id_site_site FOREIGN KEY (id_site_site) REFERENCES site(id_site);
ALTER TABLE projet ADD CONSTRAINT FK_projet_id_user_user_profil FOREIGN KEY (id_user_user_profil) REFERENCES user_profil(id_user);
ALTER TABLE projet ADD CONSTRAINT FK_projet_id_etat_etat FOREIGN KEY (id_etat_etat) REFERENCES etat(id_etat);
ALTER TABLE competence ADD CONSTRAINT FK_competence_id_comp1 FOREIGN KEY (id_comp1) REFERENCES competence(id_comp);
ALTER TABLE participe ADD CONSTRAINT FK_participe_id_projet_projet FOREIGN KEY (id_projet_projet) REFERENCES projet(id_projet);
ALTER TABLE participe ADD CONSTRAINT FK_participe_id_user_user_profil FOREIGN KEY (id_user_user_profil) REFERENCES user_profil(id_user);
ALTER TABLE possede ADD CONSTRAINT FK_possede_id_comp_competence FOREIGN KEY (id_comp_competence) REFERENCES competence(id_comp);
ALTER TABLE possede ADD CONSTRAINT FK_possede_id_user_user_profil FOREIGN KEY (id_user_user_profil) REFERENCES user_profil(id_user);
ALTER TABLE necessite ADD CONSTRAINT FK_necessite_id_projet_projet FOREIGN KEY (id_projet_projet) REFERENCES projet(id_projet);
ALTER TABLE necessite ADD CONSTRAINT FK_necessite_id_comp_competence FOREIGN KEY (id_comp_competence) REFERENCES competence(id_comp);
ALTER TABLE fait_partie ADD CONSTRAINT FK_fait_partie_id_user_user_profil FOREIGN KEY (id_user_user_profil) REFERENCES user_profil(id_user);
ALTER TABLE fait_partie ADD CONSTRAINT FK_fait_partie_id_promo_promotion FOREIGN KEY (id_promo_promotion) REFERENCES promotion(id_promo);
ALTER TABLE beneficie ADD CONSTRAINT FK_beneficie_id_role_role FOREIGN KEY (id_role_role) REFERENCES role(id_role);
ALTER TABLE beneficie ADD CONSTRAINT FK_beneficie_id_privilege_privilege FOREIGN KEY (id_privilege_privilege) REFERENCES privilege(id_privilege);
ALTER TABLE est_invite ADD CONSTRAINT FK_est_invite_id_user_user_profil FOREIGN KEY (id_user_user_profil) REFERENCES user_profil(id_user);
ALTER TABLE est_invite ADD CONSTRAINT FK_est_invite_id_projet_projet FOREIGN KEY (id_projet_projet) REFERENCES projet(id_projet);
ALTER TABLE recoit ADD CONSTRAINT FK_recoit_id_user_user_profil FOREIGN KEY (id_user_user_profil) REFERENCES user_profil(id_user);
ALTER TABLE recoit ADD CONSTRAINT FK_recoit_id_notification_notification FOREIGN KEY (id_notification_notification) REFERENCES notification(id_notification);
